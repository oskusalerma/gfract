RIGHT NOW:

-coloring algos

 -gui

  -checking for validity

 -saving/loading these

-when loading new palette, if coloring algo uses PALETTE_COUNT, and new
 palette has different count to last, automatically recalculate image

-optionally store iter/re/im for each calculated pixel, so you can tweak
 coloring without recalculating image (needs 12 bytes per pixel -> huge
 amounts of memory needed)

-use long double? (~30% slower)

-add apply button to attr dialog

MEDIUM TERM:

-remove all usage of deprecated GTK APIs. most places can be found by
 adding -DGTK_DISABLE_DEPRECATED to compile flags

 -gtk_signal_* -> g_signal_*

 -gtk_widget_set_usize -> gtk_widget_set_size_request

 -from the migration guide:

  "gtk_window_set_policy() is deprecated. To get the effect of
  "allow_shrink", call gtk_widget_set_size_request (window, 0, 0). To get
  the effect of "allow_grow", call gtk_window_set_resizable (window,
  TRUE). You didn't want the effect of "auto_shrink", it made no sense.
  But maybe if you were using it you want to use gtk_window_resize
  (window, 1, 1) to snap a window back to its minimum size (the 1, 1 will
  be rounded up to the minimum window size)."

POSSIBLY IN THE FUTURE:

-Distributed rendering

 -Multiple threads

 -Multiple machines
